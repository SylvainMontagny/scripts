// GENERATED CODE -- DO NOT EDIT!

'use strict';
var grpc = require('@grpc/grpc-js');
var api_fuota_pb = require('../api/fuota_pb.js');
var google_api_annotations_pb = require('../google/api/annotations_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var common_common_pb = require('../common/common_pb.js');
var api_multicast_group_pb = require('../api/multicast_group_pb.js');

function serialize_api_AddDevicesToFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.AddDevicesToFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.AddDevicesToFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_AddDevicesToFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.AddDevicesToFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_AddGatewaysToFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.AddGatewaysToFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.AddGatewaysToFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_AddGatewaysToFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.AddGatewaysToFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_CreateFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.CreateFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.CreateFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_CreateFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.CreateFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_CreateFuotaDeploymentResponse(arg) {
  if (!(arg instanceof api_fuota_pb.CreateFuotaDeploymentResponse)) {
    throw new Error('Expected argument of type api.CreateFuotaDeploymentResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_CreateFuotaDeploymentResponse(buffer_arg) {
  return api_fuota_pb.CreateFuotaDeploymentResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_DeleteFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.DeleteFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.DeleteFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_DeleteFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.DeleteFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_GetFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.GetFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.GetFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_GetFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.GetFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_GetFuotaDeploymentResponse(arg) {
  if (!(arg instanceof api_fuota_pb.GetFuotaDeploymentResponse)) {
    throw new Error('Expected argument of type api.GetFuotaDeploymentResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_GetFuotaDeploymentResponse(buffer_arg) {
  return api_fuota_pb.GetFuotaDeploymentResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_ListFuotaDeploymentDevicesRequest(arg) {
  if (!(arg instanceof api_fuota_pb.ListFuotaDeploymentDevicesRequest)) {
    throw new Error('Expected argument of type api.ListFuotaDeploymentDevicesRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_ListFuotaDeploymentDevicesRequest(buffer_arg) {
  return api_fuota_pb.ListFuotaDeploymentDevicesRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_ListFuotaDeploymentDevicesResponse(arg) {
  if (!(arg instanceof api_fuota_pb.ListFuotaDeploymentDevicesResponse)) {
    throw new Error('Expected argument of type api.ListFuotaDeploymentDevicesResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_ListFuotaDeploymentDevicesResponse(buffer_arg) {
  return api_fuota_pb.ListFuotaDeploymentDevicesResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_ListFuotaDeploymentGatewaysRequest(arg) {
  if (!(arg instanceof api_fuota_pb.ListFuotaDeploymentGatewaysRequest)) {
    throw new Error('Expected argument of type api.ListFuotaDeploymentGatewaysRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_ListFuotaDeploymentGatewaysRequest(buffer_arg) {
  return api_fuota_pb.ListFuotaDeploymentGatewaysRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_ListFuotaDeploymentGatewaysResponse(arg) {
  if (!(arg instanceof api_fuota_pb.ListFuotaDeploymentGatewaysResponse)) {
    throw new Error('Expected argument of type api.ListFuotaDeploymentGatewaysResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_ListFuotaDeploymentGatewaysResponse(buffer_arg) {
  return api_fuota_pb.ListFuotaDeploymentGatewaysResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_ListFuotaDeploymentsRequest(arg) {
  if (!(arg instanceof api_fuota_pb.ListFuotaDeploymentsRequest)) {
    throw new Error('Expected argument of type api.ListFuotaDeploymentsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_ListFuotaDeploymentsRequest(buffer_arg) {
  return api_fuota_pb.ListFuotaDeploymentsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_ListFuotaDeploymentsResponse(arg) {
  if (!(arg instanceof api_fuota_pb.ListFuotaDeploymentsResponse)) {
    throw new Error('Expected argument of type api.ListFuotaDeploymentsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_ListFuotaDeploymentsResponse(buffer_arg) {
  return api_fuota_pb.ListFuotaDeploymentsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_RemoveDevicesFromFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.RemoveDevicesFromFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.RemoveDevicesFromFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_RemoveDevicesFromFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.RemoveDevicesFromFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_RemoveGatewaysFromFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.RemoveGatewaysFromFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.RemoveGatewaysFromFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_RemoveGatewaysFromFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.RemoveGatewaysFromFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_StartFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.StartFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.StartFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_StartFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.StartFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_api_UpdateFuotaDeploymentRequest(arg) {
  if (!(arg instanceof api_fuota_pb.UpdateFuotaDeploymentRequest)) {
    throw new Error('Expected argument of type api.UpdateFuotaDeploymentRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_api_UpdateFuotaDeploymentRequest(buffer_arg) {
  return api_fuota_pb.UpdateFuotaDeploymentRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_google_protobuf_Empty(arg) {
  if (!(arg instanceof google_protobuf_empty_pb.Empty)) {
    throw new Error('Expected argument of type google.protobuf.Empty');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_google_protobuf_Empty(buffer_arg) {
  return google_protobuf_empty_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));
}


// FuotaService is the service providing API methods for FUOTA deployments.
var FuotaServiceService = exports.FuotaServiceService = {
  // Create the given FUOTA deployment.
createDeployment: {
    path: '/api.FuotaService/CreateDeployment',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.CreateFuotaDeploymentRequest,
    responseType: api_fuota_pb.CreateFuotaDeploymentResponse,
    requestSerialize: serialize_api_CreateFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_CreateFuotaDeploymentRequest,
    responseSerialize: serialize_api_CreateFuotaDeploymentResponse,
    responseDeserialize: deserialize_api_CreateFuotaDeploymentResponse,
  },
  // Get the FUOTA deployment for the given ID.
getDeployment: {
    path: '/api.FuotaService/GetDeployment',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.GetFuotaDeploymentRequest,
    responseType: api_fuota_pb.GetFuotaDeploymentResponse,
    requestSerialize: serialize_api_GetFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_GetFuotaDeploymentRequest,
    responseSerialize: serialize_api_GetFuotaDeploymentResponse,
    responseDeserialize: deserialize_api_GetFuotaDeploymentResponse,
  },
  // Update the given FUOTA deployment.
updateDeployment: {
    path: '/api.FuotaService/UpdateDeployment',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.UpdateFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_UpdateFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_UpdateFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // Delete the FUOTA deployment for the given ID.
deleteDeployment: {
    path: '/api.FuotaService/DeleteDeployment',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.DeleteFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_DeleteFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_DeleteFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // Start the FUOTA deployment.
startDeployment: {
    path: '/api.FuotaService/StartDeployment',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.StartFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_StartFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_StartFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // List the FUOTA deployments.
listDeployments: {
    path: '/api.FuotaService/ListDeployments',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.ListFuotaDeploymentsRequest,
    responseType: api_fuota_pb.ListFuotaDeploymentsResponse,
    requestSerialize: serialize_api_ListFuotaDeploymentsRequest,
    requestDeserialize: deserialize_api_ListFuotaDeploymentsRequest,
    responseSerialize: serialize_api_ListFuotaDeploymentsResponse,
    responseDeserialize: deserialize_api_ListFuotaDeploymentsResponse,
  },
  // Add the given DevEUIs to the FUOTA deployment.
addDevices: {
    path: '/api.FuotaService/AddDevices',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.AddDevicesToFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_AddDevicesToFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_AddDevicesToFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // Remove the given DevEUIs from the FUOTA deployment.
removeDevices: {
    path: '/api.FuotaService/RemoveDevices',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.RemoveDevicesFromFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_RemoveDevicesFromFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_RemoveDevicesFromFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // List FUOTA Deployment devices.
listDevices: {
    path: '/api.FuotaService/ListDevices',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.ListFuotaDeploymentDevicesRequest,
    responseType: api_fuota_pb.ListFuotaDeploymentDevicesResponse,
    requestSerialize: serialize_api_ListFuotaDeploymentDevicesRequest,
    requestDeserialize: deserialize_api_ListFuotaDeploymentDevicesRequest,
    responseSerialize: serialize_api_ListFuotaDeploymentDevicesResponse,
    responseDeserialize: deserialize_api_ListFuotaDeploymentDevicesResponse,
  },
  // Add the given Gateway IDs to the FUOTA deployment.
// By default, ChirpStack will automatically select the minimum amount of
// gateways needed to cover all devices within the multicast-group. Setting
// the gateways manually overrides this behaviour.
addGateways: {
    path: '/api.FuotaService/AddGateways',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.AddGatewaysToFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_AddGatewaysToFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_AddGatewaysToFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // List the gateways added to the FUOTA deployment.
listGateways: {
    path: '/api.FuotaService/ListGateways',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.ListFuotaDeploymentGatewaysRequest,
    responseType: api_fuota_pb.ListFuotaDeploymentGatewaysResponse,
    requestSerialize: serialize_api_ListFuotaDeploymentGatewaysRequest,
    requestDeserialize: deserialize_api_ListFuotaDeploymentGatewaysRequest,
    responseSerialize: serialize_api_ListFuotaDeploymentGatewaysResponse,
    responseDeserialize: deserialize_api_ListFuotaDeploymentGatewaysResponse,
  },
  // Remove the given Gateway IDs from the FUOTA deployment.
removeGateways: {
    path: '/api.FuotaService/RemoveGateways',
    requestStream: false,
    responseStream: false,
    requestType: api_fuota_pb.RemoveGatewaysFromFuotaDeploymentRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_api_RemoveGatewaysFromFuotaDeploymentRequest,
    requestDeserialize: deserialize_api_RemoveGatewaysFromFuotaDeploymentRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
};

exports.FuotaServiceClient = grpc.makeGenericClientConstructor(FuotaServiceService);
