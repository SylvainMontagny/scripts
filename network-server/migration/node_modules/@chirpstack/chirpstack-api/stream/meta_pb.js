// source: stream/meta.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_common_pb = require('../common/common_pb.js');
goog.object.extend(proto, common_common_pb);
var gw_gw_pb = require('../gw/gw_pb.js');
goog.object.extend(proto, gw_gw_pb);
goog.exportSymbol('proto.stream.DownlinkMeta', null, global);
goog.exportSymbol('proto.stream.UplinkMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stream.UplinkMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.UplinkMeta.repeatedFields_, null);
};
goog.inherits(proto.stream.UplinkMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stream.UplinkMeta.displayName = 'proto.stream.UplinkMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stream.DownlinkMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stream.DownlinkMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stream.DownlinkMeta.displayName = 'proto.stream.DownlinkMeta';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stream.UplinkMeta.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stream.UplinkMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.stream.UplinkMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stream.UplinkMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stream.UplinkMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txInfo: (f = msg.getTxInfo()) && gw_gw_pb.UplinkTxInfo.toObject(includeInstance, f),
    rxInfoList: jspb.Message.toObjectList(msg.getRxInfoList(),
    gw_gw_pb.UplinkRxInfo.toObject, includeInstance),
    phyPayloadByteCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    macCommandByteCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    applicationPayloadByteCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    messageType: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stream.UplinkMeta}
 */
proto.stream.UplinkMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stream.UplinkMeta;
  return proto.stream.UplinkMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stream.UplinkMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stream.UplinkMeta}
 */
proto.stream.UplinkMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 2:
      var value = new gw_gw_pb.UplinkTxInfo;
      reader.readMessage(value,gw_gw_pb.UplinkTxInfo.deserializeBinaryFromReader);
      msg.setTxInfo(value);
      break;
    case 3:
      var value = new gw_gw_pb.UplinkRxInfo;
      reader.readMessage(value,gw_gw_pb.UplinkRxInfo.deserializeBinaryFromReader);
      msg.addRxInfo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPhyPayloadByteCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMacCommandByteCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setApplicationPayloadByteCount(value);
      break;
    case 7:
      var value = /** @type {!proto.common.MType} */ (reader.readEnum());
      msg.setMessageType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stream.UplinkMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stream.UplinkMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stream.UplinkMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stream.UplinkMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      gw_gw_pb.UplinkTxInfo.serializeBinaryToWriter
    );
  }
  f = message.getRxInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      gw_gw_pb.UplinkRxInfo.serializeBinaryToWriter
    );
  }
  f = message.getPhyPayloadByteCount();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMacCommandByteCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getApplicationPayloadByteCount();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMessageType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.stream.UplinkMeta.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.setDevEui = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional gw.UplinkTxInfo tx_info = 2;
 * @return {?proto.gw.UplinkTxInfo}
 */
proto.stream.UplinkMeta.prototype.getTxInfo = function() {
  return /** @type{?proto.gw.UplinkTxInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.UplinkTxInfo, 2));
};


/**
 * @param {?proto.gw.UplinkTxInfo|undefined} value
 * @return {!proto.stream.UplinkMeta} returns this
*/
proto.stream.UplinkMeta.prototype.setTxInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.clearTxInfo = function() {
  return this.setTxInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stream.UplinkMeta.prototype.hasTxInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated gw.UplinkRxInfo rx_info = 3;
 * @return {!Array<!proto.gw.UplinkRxInfo>}
 */
proto.stream.UplinkMeta.prototype.getRxInfoList = function() {
  return /** @type{!Array<!proto.gw.UplinkRxInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, gw_gw_pb.UplinkRxInfo, 3));
};


/**
 * @param {!Array<!proto.gw.UplinkRxInfo>} value
 * @return {!proto.stream.UplinkMeta} returns this
*/
proto.stream.UplinkMeta.prototype.setRxInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gw.UplinkRxInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gw.UplinkRxInfo}
 */
proto.stream.UplinkMeta.prototype.addRxInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gw.UplinkRxInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.clearRxInfoList = function() {
  return this.setRxInfoList([]);
};


/**
 * optional uint32 phy_payload_byte_count = 4;
 * @return {number}
 */
proto.stream.UplinkMeta.prototype.getPhyPayloadByteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.setPhyPayloadByteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 mac_command_byte_count = 5;
 * @return {number}
 */
proto.stream.UplinkMeta.prototype.getMacCommandByteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.setMacCommandByteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 application_payload_byte_count = 6;
 * @return {number}
 */
proto.stream.UplinkMeta.prototype.getApplicationPayloadByteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.setApplicationPayloadByteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional common.MType message_type = 7;
 * @return {!proto.common.MType}
 */
proto.stream.UplinkMeta.prototype.getMessageType = function() {
  return /** @type {!proto.common.MType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.common.MType} value
 * @return {!proto.stream.UplinkMeta} returns this
 */
proto.stream.UplinkMeta.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stream.DownlinkMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.stream.DownlinkMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stream.DownlinkMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stream.DownlinkMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: jspb.Message.getFieldWithDefault(msg, 1, ""),
    multicastGroupId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    txInfo: (f = msg.getTxInfo()) && gw_gw_pb.DownlinkTxInfo.toObject(includeInstance, f),
    phyPayloadByteCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    macCommandByteCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    applicationPayloadByteCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    messageType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    gatewayId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stream.DownlinkMeta}
 */
proto.stream.DownlinkMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stream.DownlinkMeta;
  return proto.stream.DownlinkMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stream.DownlinkMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stream.DownlinkMeta}
 */
proto.stream.DownlinkMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMulticastGroupId(value);
      break;
    case 3:
      var value = new gw_gw_pb.DownlinkTxInfo;
      reader.readMessage(value,gw_gw_pb.DownlinkTxInfo.deserializeBinaryFromReader);
      msg.setTxInfo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPhyPayloadByteCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMacCommandByteCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setApplicationPayloadByteCount(value);
      break;
    case 7:
      var value = /** @type {!proto.common.MType} */ (reader.readEnum());
      msg.setMessageType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stream.DownlinkMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stream.DownlinkMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stream.DownlinkMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stream.DownlinkMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTxInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      gw_gw_pb.DownlinkTxInfo.serializeBinaryToWriter
    );
  }
  f = message.getPhyPayloadByteCount();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMacCommandByteCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getApplicationPayloadByteCount();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMessageType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getGatewayId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.stream.DownlinkMeta.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setDevEui = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string multicast_group_id = 2;
 * @return {string}
 */
proto.stream.DownlinkMeta.prototype.getMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setMulticastGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional gw.DownlinkTxInfo tx_info = 3;
 * @return {?proto.gw.DownlinkTxInfo}
 */
proto.stream.DownlinkMeta.prototype.getTxInfo = function() {
  return /** @type{?proto.gw.DownlinkTxInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.DownlinkTxInfo, 3));
};


/**
 * @param {?proto.gw.DownlinkTxInfo|undefined} value
 * @return {!proto.stream.DownlinkMeta} returns this
*/
proto.stream.DownlinkMeta.prototype.setTxInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.clearTxInfo = function() {
  return this.setTxInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stream.DownlinkMeta.prototype.hasTxInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 phy_payload_byte_count = 4;
 * @return {number}
 */
proto.stream.DownlinkMeta.prototype.getPhyPayloadByteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setPhyPayloadByteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 mac_command_byte_count = 5;
 * @return {number}
 */
proto.stream.DownlinkMeta.prototype.getMacCommandByteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setMacCommandByteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 application_payload_byte_count = 6;
 * @return {number}
 */
proto.stream.DownlinkMeta.prototype.getApplicationPayloadByteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setApplicationPayloadByteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional common.MType message_type = 7;
 * @return {!proto.common.MType}
 */
proto.stream.DownlinkMeta.prototype.getMessageType = function() {
  return /** @type {!proto.common.MType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.common.MType} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string gateway_id = 8;
 * @return {string}
 */
proto.stream.DownlinkMeta.prototype.getGatewayId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.stream.DownlinkMeta} returns this
 */
proto.stream.DownlinkMeta.prototype.setGatewayId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.stream);
